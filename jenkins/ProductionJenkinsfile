#!groovy

node {

    def DEPLOYDIR='src'
    def TEST_LEVEL='RunLocalTests'
    def SF_INSTANCE_URL = "https://login.salesforce.com"


    def toolbelt = tool 'toolbelt'
    def pmd = tool 'pmd'


    // -------------------------------------------------------------------------
    // Check out code from source control.
    // -------------------------------------------------------------------------

    stage('checkout source') {
        checkout scm
    }
    // -------------------------------------------------------------------------
    // Run all the enclosed stages with access to the Salesforce
    // JWT key credentials.
    // -------------------------------------------------------------------------

 	withEnv(["HOME=${env.WORKSPACE}"]) {	

    	   // withCredentials([file(credentialsId: SERVER_KEY_CREDENTIALS_ID, variable: 'server_key_file')]) {
    	   withCredentials([string(credentialsId: 'SF_CONSUMER_KEY', variable: 'SF_CONSUMER_KEY'), string(credentialsId: 'SF_USERNAME', variable: 'SF_USERNAME'), file(credentialsId: 'SERVER_KEY_CREDENTIALS_ID', variable: 'server_key_file')]) {
    		// -------------------------------------------------------------------------
    		// Authenticate to Salesforce using the server key.
    		// -------------------------------------------------------------------------

    		stage('Authorize to Salesforce') {
    			rc = command "${toolbelt}/sfdx auth:jwt:grant --instanceurl ${SF_INSTANCE_URL} --clientid ${SF_CONSUMER_KEY} --jwtkeyfile ${server_key_file} --username ${SF_USERNAME} --setalias PROD"
    		    if (rc != 0) {
    			error 'Salesforce org authorization failed.'
    		    }
    		}
/           / -------------------------------------------------------------------------
    		// Example shows how to run a check-only deploy.
    		// -------------------------------------------------------------------------

    		stage('Check Only Deploy') {
    		    rc = command "${toolbelt}/sfdx force:mdapi:deploy --checkonly --wait 10 --deploydir ${DEPLOYDIR} --targetusername PROD --testlevel ${TEST_LEVEL}"
    		    if (rc != 0) {
    		        error 'Salesforce deploy failed.'
    		    }
    		}

    		// -------------------------------------------------------------------------
    		// Deploy metadata and execute unit tests.
    		// -------------------------------------------------------------------------

    		stage('Deploy and Run Tests') {
    		    rc = command "${toolbelt}/sfdx force:mdapi:deploy --wait 10 --deploydir ${DEPLOYDIR} --targetusername PROD --testlevel ${TEST_LEVEL}"
    		    if (rc != 0) {
    			error 'Salesforce deploy and test run failed.'
    		    }
    		}



    	    }
    	}
}

def command(script) {
    if (isUnix()) {
        return sh(returnStatus: true, script: script);
    } else {
		return bat(returnStatus: true, script: script);
    }
}

