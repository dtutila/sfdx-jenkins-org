#!groovy

node {

    def toolbelt = tool 'toolbelt'
    def pmd = tool 'pmd'


    // -------------------------------------------------------------------------
    // Check out code from source control.
    // -------------------------------------------------------------------------

    stage('checkout source') {
        checkout scm
    }
    // -------------------------------------------------------------------------
    // Run all the enclosed stages with access to the Salesforce
    // JWT key credentials.
    // -------------------------------------------------------------------------

 	withEnv(["HOME=${env.WORKSPACE}"]) {	
 		/* stage('installing scanner'){
 		
 		    rc = command "${toolbelt}/sfdx plugins:install @salesforce/sfdx-scanner"
		    if (rc != 0) {
			error 'Scanner installation failed.'
		    }
 		} */

		stage('Running pmd') {

		    rc = command "${pmd}/run.sh pmd -d src -R src/resources/rulesets/apex/ruleset.xml -f xml -r src/pmd.xml"
		     if (rc != 0) {
			    error 'Salesforce static analysis failed.'
		    }
		}


		// -------------------------------------------------------------------------
		// Example shows how to run a check-only deploy.
		// -------------------------------------------------------------------------

		//stage('Check Only Deploy') {
		//    rc = command "${toolbelt}/sfdx force:mdapi:deploy --checkonly --wait 10 --deploydir ${DEPLOYDIR} --targetusername UAT --testlevel ${TEST_LEVEL}"
		//    if (rc != 0) {
		//        error 'Salesforce deploy failed.'
		//    }
		//}
	    //}
	}

	recordIssues(tools: [pmdParser()])
	emailextrecipients([developers()])
}

def command(script) {
    if (isUnix()) {
        return sh(returnStatus: true, script: script);
    } else {
		return bat(returnStatus: true, script: script);
    }
}

